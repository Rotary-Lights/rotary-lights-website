version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}
  production_django_staticfiles: {}

services:
  django: &django
    image: rotarylights/website:latest
    depends_on:
      - postgres
      - redis
    env_file:
      - ./.envs/.production/.django
      - ./.envs/.production/.postgres
    volumes:
      - production_django_staticfiles:/app/staticfiles:rw
    command: /start
    restart: always

  postgres:
    image: rotarylights/postgres:latest
    volumes:
      - production_postgres_data:/var/lib/postgresql/data
      - production_postgres_data_backups:/backups
    env_file:
      - ./.envs/.production/.postgres
    restart: always

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    depends_on:
      - django
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
      - ./compose/production/nginx/vhost.d:/etc/nginx/vhost.d:ro
      - production_django_staticfiles:/staticfiles:ro
    restart: always

  redis:
    image: redis:6
    restart: always

  celeryworker:
    <<: *django
    image: rotarylights/celeryworker:latest
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: rotarylights/celerybeat:latest
    command: /start-celerybeat

  flower:
    <<: *django
    image: rotarylights/flower:latest
    command: /start-flower
